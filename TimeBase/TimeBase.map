Archive member included because of file (symbol)

/usr/lib/gcc/avr/3.4.1/avr4/libgcc.a(_udivmodhi4.o)
                              Scan.o (__udivmodhi4)
/usr/lib/gcc/avr/3.4.1/avr4/libgcc.a(_copy_data.o)
                              TimeBase.o (__do_copy_data)
/usr/lib/gcc/avr/3.4.1/avr4/libgcc.a(_clear_bss.o)
                              TimeBase.o (__do_clear_bss)
/usr/avr/lib/avr5/libc.a(memset.o)
                              Scan.o (memset)

Allocating common symbols
Common symbol       size              file

OutVoltage          0x9               Scan.o
OutCurrent          0x9               Scan.o
OutDat              0x9               Scan.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
LOAD TimeBase.o
LOAD Scan.o
LOAD Spi.o
LOAD /usr/lib/gcc/avr/3.4.1/avr4/libgcc.a
LOAD /usr/avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/3.4.1/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x6ec
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
 *(.init0)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 /usr/lib/gcc/avr/3.4.1/avr4/libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 .init4         0x00000048       0x10 /usr/lib/gcc/avr/3.4.1/avr4/libgcc.a(_clear_bss.o)
                0x00000048                __do_clear_bss
 *(.init5)
 *(.init6)
 *(.init7)
 *(.init8)
 *(.init9)
 .init9         0x00000058        0x2 /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
 *(.text)
 .text          0x0000005a        0x2 /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
                0x0000005a                __vector_12
                0x0000005a                __bad_interrupt
                0x0000005a                __vector_11
                0x0000005a                __vector_13
                0x0000005a                __vector_17
                0x0000005a                __vector_7
                0x0000005a                __vector_5
                0x0000005a                __vector_4
                0x0000005a                __vector_9
                0x0000005a                __vector_2
                0x0000005a                __vector_15
                0x0000005a                __vector_8
                0x0000005a                __vector_14
                0x0000005a                __vector_16
                0x0000005a                __vector_18
 .text          0x0000005c       0x28 TimeBase.o
                0x0000005c                main
 .text          0x00000084      0x562 Scan.o
                0x000002ac                __vector_1
                0x00000244                __vector_6
                0x000000aa                __vector_3
                0x00000084                phaseDetInt
                0x0000056a                scanInit
 .text          0x000005e6       0xd0 Spi.o
                0x000006b0                spiInit
                0x000005e6                __vector_10
 .text          0x000006b6        0xe /usr/avr/lib/avr5/libc.a(memset.o)
                0x000006b6                memset
                0x000006c4                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000006c4       0x28 /usr/lib/gcc/avr/3.4.1/avr4/libgcc.a(_udivmodhi4.o)
                0x000006c4                __udivmodhi4
                0x000006ec                . = ALIGN (0x2)
 *(.fini9)
 *(.fini8)
 *(.fini7)
 *(.fini6)
 *(.fini5)
 *(.fini4)
 *(.fini3)
 *(.fini2)
 *(.fini1)
 *(.fini0)
                0x000006ec                _etext = .

.data           0x00800060        0xc load address 0x000006ec
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0xb Scan.o
                0x00800060                var_close
                0x00800062                phDetCnt
 .data          0x0080006b        0x1 Spi.o
 *(.gnu.linkonce.d*)
                0x0080006c                . = ALIGN (0x2)
                0x0080006c                _edata = .
                0x0080006c                PROVIDE (__data_end, .)

.bss            0x0080006c       0x2a
                0x0080006c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080006c        0xd Scan.o
                0x0080006d                dpllEnable
                0x0080006e                dirMask
                0x0080006c                tmr2Start
 .bss           0x00800079        0x2 Spi.o
 *(COMMON)
 COMMON         0x0080007b       0x1b Scan.o
                                  0x0 (size before relaxing)
                0x0080007b                OutVoltage
                0x00800084                OutCurrent
                0x0080008d                OutDat
                0x00800096                PROVIDE (__bss_end, .)
                0x000006ec                __data_load_start = LOADADDR (.data)
                0x000006f8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800096        0x0
                0x00800096                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800096                PROVIDE (__noinit_end, .)
                0x00800096                _end = .
                0x00800096                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0 load address 0x000006f8
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab           0x00000000     0x13a4
 *(.stab)
 .stab          0x00000000      0x2a0 /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
 .stab          0x000002a0      0x30c TimeBase.o
                                0x318 (size before relaxing)
 .stab          0x000005ac      0xa74 Scan.o
                                0xb7c (size before relaxing)
 .stab          0x00001020      0x318 Spi.o
                                0x420 (size before relaxing)
 .stab          0x00001338       0x6c /usr/avr/lib/avr5/libc.a(memset.o)
                                 0x78 (size before relaxing)

.stabstr        0x00000000      0x9f4
 *(.stabstr)
 .stabstr       0x00000000      0x9f4 /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
                                  0x0 (size before relaxing)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(TimeBase.elf elf32-avr)

Cross Reference Table

Symbol                                            File
OutCurrent                                        Spi.o
                                                  Scan.o
OutDat                                            Spi.o
                                                  Scan.o
OutVoltage                                        Spi.o
                                                  Scan.o
__bad_interrupt                                   /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__bss_end                                         /usr/lib/gcc/avr/3.4.1/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/3.4.1/avr4/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/3.4.1/avr4/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/3.4.1/avr4/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/3.4.1/avr4/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/3.4.1/avr4/libgcc.a(_clear_bss.o)
                                                  Spi.o
                                                  Scan.o
                                                  TimeBase.o
__do_copy_data                                    /usr/lib/gcc/avr/3.4.1/avr4/libgcc.a(_copy_data.o)
                                                  Spi.o
                                                  Scan.o
                                                  TimeBase.o
__heap_end                                        /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__init                                            /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__stack                                           /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
                                                  TimeBase.o
__udivmodhi4                                      /usr/lib/gcc/avr/3.4.1/avr4/libgcc.a(_udivmodhi4.o)
                                                  Scan.o
__vector_1                                        Scan.o
                                                  /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_10                                       Spi.o
                                                  /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_11                                       /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_12                                       /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_13                                       /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_14                                       /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_15                                       /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_16                                       /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_17                                       /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_18                                       /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_2                                        /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_3                                        Scan.o
                                                  /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_4                                        /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_5                                        /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_6                                        Scan.o
                                                  /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_7                                        /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_8                                        /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_9                                        /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vector_default                                  /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
__vectors                                         /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
dirMask                                           Scan.o
                                                  Spi.o
dpllEnable                                        Scan.o
                                                  Spi.o
main                                              TimeBase.o
                                                  /usr/lib/gcc/avr/3.4.1/../../../../avr/lib/avr4/crtm8.o
memset                                            /usr/avr/lib/avr5/libc.a(memset.o)
                                                  Scan.o
phDetCnt                                          Scan.o
phaseDetInt                                       Scan.o
scanInit                                          Scan.o
                                                  TimeBase.o
spiInit                                           Spi.o
                                                  TimeBase.o
tmr2Start                                         Scan.o
var_close                                         Scan.o
